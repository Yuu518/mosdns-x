name: Build mosdns-x Cores

on:
  workflow_dispatch:
  push:

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.go.outputs.version}}
    steps:
      - name: get latest go version
        id: go
        run: |
          echo version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs:
      - go
    strategy:
      matrix:
        jobs:
          # linux
          - { goos: linux, goarch: amd64, goamd64: v1, output: amd64 }
          - { goos: linux, goarch: amd64, goamd64: v3, output: amd64v3 }
          - { goos: linux, goarch: arm64, output: arm64 }
    env:
      GOOS: ${{ matrix.jobs.goos }}
      GOARCH: ${{ matrix.jobs.goarch }}
      GOAMD64: ${{ matrix.jobs.goamd64 }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: setup go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: ${{needs.go.outputs.version}}

      - name: build core
        run: go build -ldflags "-s -w -X main.version=mosdns-x${{ env.SUFFIX }}" -trimpath -o mosdns${{ env.SUFFIX }}

      - name: upload core
        uses: actions/upload-artifact@v4.6.2
        with:
          name: mosdns-x-${{ env.GOOS }}-${{ matrix.jobs.output }}
          path: |
            mosdns${{ env.SUFFIX }}
          compression-level: 9
